{
    "Backstage: API": {
        "prefix": "kind: API",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: API",
            "metadata:",
            "  name: ${1:api-name}",
            "  description: ${2:Some description of the $1 interface}",
            "spec:",
            "  type: ${3|openapi,asyncapi,graphql,grpc|}",
            "  lifecycle: ${4|production,experimental,deprecated|}",
            "  owner: ${5|group,user|}:${6:$5-name}",
            "  system: ${7:system-name}",
            "  definition: |",
            "    {$8}"
        ]
    },
    "Backstage: Component": {
        "prefix": "kind: Component",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: Component",
            "metadata:",
            "  name: ${1:component-name}",
            "  description: ${2:Some description of the $1 component}",
            "spec:",
            "  type: ${3|service,website,library|}",
            "  lifecycle: ${4|production,experimental,deprecated|}",
            "  owner: ${5|group,user|}:${6:$5-name}",
            "  system: ${7:system-name}",
            "  dependsOn:",
            "    - ${8|resource,component|}:default/${9:$8-name}",
            "  providesApis:",
            "    - ${10:api-name}",
            "  consumesApis:",
            "    - ${11:other-api-name}"
        ]
    },
    "Backstage: Domain": {
        "prefix": "kind: Domain",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: Domain",
            "metadata:",
            "  name: ${1:domain-name}",
            "  description: ${2:Everything about $1}",
            "spec:",
            "  owner: ${3|group,user|}:${4:$3-name}"
        ]
    },
    "Backstage: Group": {
        "prefix": "kind: Group",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: Group",
            "metadata:",
            "  name: ${1:group-name}",
            "  description: ${2:Group description}",
            "spec:",
            "  type: ${3|team,business-unit,product-area,root|}",
            "  profile:",
            "    displayName: ${4:Group Name}",
            "    email: ${5:optional-email@example.com}",
            "    picture: https://avatars.dicebear.com/api/initials/$1.svg",
            "  parent: ${6:optional-parent-group}",
            "  children: []",
            "  members: []"
        ]
    },
    "Backstage: Location": {
        "prefix": "kind: Location",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: Location",
            "metadata:",
            "  name: ${1:location-name}",
            "spec:",
            "  targets:",
            "    - ${2:./backstage/component.yaml}"
        ]
    },
    "Backstage: Resource": {
        "prefix": "kind: Resource",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: Resource",
            "metadata:",
            "  name: ${1:resource-name}",
            "  description: ${2:Description of $1}",
            "spec:",
            "  type: ${3|database,s3-bucket,cluster,elastic-instance,custom-type|}",
            "  owner: ${4|group,user|}:${5:$4-name}",
            "  system: ${6:system-name}"
        ]
    },
    "Backstage: System": {
        "prefix": "kind: System",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: System",
            "metadata:",
            "  name: ${1:system-name}",
            "  description: ${2:Description of $1}",
            "spec:",
            "  owner: ${3|group,user|}:${4:$3-name}",
            "  domain: ${5:domain-name}"
        ]
    },
    "Backstage: Template": {
        "prefix": "kind: Template",
        "body": [
            "---",
            "apiVersion: backstage.io/v1beta2",
            "kind: Template",
            "# some metadata about the template itself",
            "metadata:",
            "  name: ${1:template-name}",
            "  title: ${2:My template}",
            "  description: ${3:Scaffolds $1 template}",
            "spec:",
            "  owner: ${4|group,user|}:${5:$4-name}",
            "  type: ${6|service,website,library|}",
            "",
            "  # these are the steps which are rendered in the frontend with the form input",
            "  parameters:",
            "    - title: Fill in some steps",
            "      required:",
            "        - name",
            "      properties:",
            "        name:",
            "          title: Name",
            "          type: string",
            "          description: Unique name of the component",
            "          ui:autofocus: true",
            "          ui:options:",
            "            rows: 5",
            "    - title: Choose a location",
            "      required:",
            "        - repoUrl",
            "      properties:",
            "        repoUrl:",
            "          title: Repository Location",
            "          type: string",
            "          ui:field: RepoUrlPicker",
            "          ui:options:",
            "            allowedHosts:",
            "              - github.com",
            "",
            "  # here's the steps that are executed in series in the scaffolder backend",
            "  steps:",
            "    - id: fetch-base",
            "      name: Fetch Base",
            "      action: fetch:template",
            "      input:",
            "        url: ./template",
            "        values:",
            "          name: '{{ parameters.name }}'",
            "",
            "    - id: fetch-docs",
            "      name: Fetch Docs",
            "      action: fetch:plain",
            "      input:",
            "        targetPath: ./community",
            "        url: https://github.com/backstage/community/tree/main/backstage-community-sessions",
            "",
            "    - id: publish",
            "      name: Publish",
            "      action: publish:github",
            "      input:",
            "        allowedHosts: ['github.com']",
            "        description: 'This is {{ parameters.name }}'",
            "        repoUrl: '{{ parameters.repoUrl }}'",
            "",
            "    - id: register",
            "      name: Register",
            "      action: catalog:register",
            "      input:",
            "        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'",
            "        catalogInfoPath: '/catalog-info.yaml'"
        ]
    },
    "Backstage: User": {
        "prefix": "kind: User",
        "body": [
            "---",
            "apiVersion: backstage.io/v1alpha1",
            "kind: User",
            "metadata:",
            "  name: ${1:jenny.doe}",
            "spec:",
            "  profile:",
            "    displayName: ${2:Jenny Doe}",
            "    email: ${3:$1}@${4:example.com}",
            "    picture: ${5:https://avatars.dicebear.com/api/initials/$1@$4.svg}",
            "  memberOf: [${6:group-name}]"
        ]
    }
}